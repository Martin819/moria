/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package moria.server.api;

import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
import moria.server.model.Transaction;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-02-27T08:59:02.143Z")

@Api(value = "transaction", description = "the transaction API")
public interface TransactionApi {

    @ApiOperation(value = "Add a new transaction", nickname = "addTransaction", notes = "", response = Transaction.class, tags={ "transaction", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Transaction.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/transaction",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Transaction> addTransaction(@ApiParam(value = "Transaction object that needs to be added" ,required=true )  @Valid @RequestBody Transaction body);


    @ApiOperation(value = "Finds transactions by date", nickname = "findTransactionByDate", notes = "", response = Transaction.class, responseContainer = "List", tags={ "transaction", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Transaction.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid value") })
    @RequestMapping(value = "/transaction/findByDate",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Transaction>> findTransactionByDate(@NotNull @ApiParam(value = "Datetime from which to load transactions", required = true) @Valid @RequestParam(value = "dateFrom", required = true) OffsetDateTime dateFrom,@NotNull @ApiParam(value = "Datetime to which to load transactions", required = true) @Valid @RequestParam(value = "dateTo", required = true) OffsetDateTime dateTo,@NotNull @ApiParam(value = "accountId for transactions", required = true) @Valid @RequestParam(value = "accountId", required = true) BigDecimal accountId);

}
